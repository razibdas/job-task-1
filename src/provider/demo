import { createContext, useEffect, useState } from 'react';
import {
    createUserWithEmailAndPassword,
    onAuthStateChanged,
    signInWithEmailAndPassword,
    signInWithPopup,
    FacebookAuthProvider,
    signOut,
} from 'firebase/auth';
import { GoogleAuthProvider } from 'firebase/auth';
import { auth } from './../Config/firebase.config';

export const AuthContext = createContext(null);
const providerGoogle = new GoogleAuthProvider();

const providerFacebook = new FacebookAuthProvider();

const AuthProvider = ({ children }) => {
    const [user, setUser] = useState(null);
    const [loading, setLoading] = useState(true);

    const registerUser = (email, password) => {
        setLoading(true);
        return createUserWithEmailAndPassword(auth, email, password);
    };

    const signInUser = (email, password) => {
        setLoading(true);
        return signInWithEmailAndPassword(auth, email, password);
    };

    useEffect(() => {
        const unsubscribe = onAuthStateChanged(auth, currentUser => {
            setLoading(false);
            setUser(currentUser);
        });
        return () => {
            unsubscribe();
        };
    }, []);

    const googleSignIn = () => {
        setLoading(true);
        return signInWithPopup(auth, providerGoogle);
    };

    const facebookSignIn = () => {
        setLoading(true);
        return signInWithPopup(auth, providerFacebook);
    };

    const signOutUser = () => {
        setLoading(true);
        return signOut(auth);
    };

    const AuthInfo = {
        user,
        loading,
        signOutUser,
        registerUser,
        googleSignIn,
        signInUser,
        facebookSignIn,
    };

    return (
        <AuthContext.Provider value={AuthInfo}>{children}</AuthContext.Provider>
    );
};

export default AuthProvider;